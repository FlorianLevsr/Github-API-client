[{"/mnt/d/Dev/Github-API-client/github-api-client/src/components/App/index.js":"1","/mnt/d/Dev/Github-API-client/github-api-client/src/components/PageNav/index.js":"2","/mnt/d/Dev/Github-API-client/github-api-client/src/components/Message/index.js":"3","/mnt/d/Dev/Github-API-client/github-api-client/src/components/Results/index.js":"4","/mnt/d/Dev/Github-API-client/github-api-client/src/components/SearchBar/index.js":"5","/mnt/d/Dev/Github-API-client/github-api-client/src/index.js":"6","/mnt/d/Dev/Github-API-client/github-api-client/src/components/Viewer/index.js":"7"},{"size":3505,"mtime":1612178078292,"results":"8","hashOfConfig":"9"},{"size":1392,"mtime":1612098773169,"results":"10","hashOfConfig":"9"},{"size":1124,"mtime":1612098904378,"results":"11","hashOfConfig":"9"},{"size":1377,"mtime":1612020750310,"results":"12","hashOfConfig":"9"},{"size":1063,"mtime":1612098810970,"results":"13","hashOfConfig":"9"},{"size":276,"mtime":1612097009277,"results":"14","hashOfConfig":"9"},{"size":1980,"mtime":1612174721422,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"naefmo",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/d/Dev/Github-API-client/github-api-client/src/components/App/index.js",[],"/mnt/d/Dev/Github-API-client/github-api-client/src/components/PageNav/index.js",[],["33","34"],"/mnt/d/Dev/Github-API-client/github-api-client/src/components/Message/index.js",[],"/mnt/d/Dev/Github-API-client/github-api-client/src/components/Results/index.js",["35"],"import React from 'react';\r\nimport { BrowserRouter, Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from 'semantic-ui-react';\r\n\r\nimport './style.scss';\r\n\r\nconst Results = ({ list }) => {\r\n\r\n    const Item = ({ name, description, owner }) => (\r\n\r\n        <div className=\"result-item\">\r\n\r\n            <Link to={`/${owner.login}/${name}`}>\r\n\r\n                <Card\r\n                    fluid\r\n                    image={owner.avatar_url}\r\n                    header={name}\r\n                    description={description}\r\n                    meta={owner.login}\r\n                />\r\n\r\n            </Link>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n    Item.propTypes = {\r\n        name: PropTypes.string.isRequired,\r\n        description: PropTypes.string,\r\n        owner: PropTypes.shape({\r\n            login: PropTypes.string.isRequired,\r\n            avatar_url: PropTypes.string.isRequired,\r\n            html_url: PropTypes.string.isRequired,\r\n        }).isRequired\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"result-container\">\r\n\r\n                {\r\n                    list.map((item) => {\r\n                        return <Item key={item.id} {...item} />\r\n                    })\r\n                }\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nResults.prototypes = {\r\n    list: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default Results;","/mnt/d/Dev/Github-API-client/github-api-client/src/components/SearchBar/index.js",[],["36","37"],"/mnt/d/Dev/Github-API-client/github-api-client/src/index.js",[],"/mnt/d/Dev/Github-API-client/github-api-client/src/components/Viewer/index.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":23},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]